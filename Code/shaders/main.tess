#version 430 core

layout (vertices = 3) out;

uniform mat4 model_mat;
uniform mat4 view_mat;
uniform mat4 proj_mat;

uniform sampler2D height;

uniform float tessFactor;

void main(void)
{
    if (gl_InvocationID == 0)
    {
        vec4 pos = gl_in[gl_InvocationID].gl_Position;
        float offset = texture2D(height, (pos.xy*0.99)/2+0.5).r;
        pos = proj_mat * view_mat * model_mat * pos;//vec4(pos.x, pos.y, pos.z+offset, 1.0);
        float factor = (1-(length(pos)/100.0))*tessFactor;
        factor = clamp(tessFactor*(1/(abs(pos.z)+.1)),1,64);
        gl_TessLevelInner[0] = factor*1.0;

        gl_TessLevelOuter[0] = factor*1.0;
        gl_TessLevelOuter[1] = factor*1.0;
        gl_TessLevelOuter[2] = factor*1.0;

        /*if(offset<0){
            gl_TessLevelInner[0] = 0;
            gl_TessLevelOuter[0] = 0;
            gl_TessLevelOuter[1] = 0;
            gl_TessLevelOuter[2] = 0;
        }*/
    }

    gl_out[gl_InvocationID].gl_Position =
        gl_in[gl_InvocationID].gl_Position;
}